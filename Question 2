a)
import pandas as pd

# Read the CSV file into a DataFrame
df = pd.read_csv('Salary_Data.csv')

# Display the first few rows of the DataFrame to verify the import
print(df.head())

b)
from sklearn.model_selection import train_test_split

# Assuming 'YearsExperience' is the feature and 'Salary' is the target
X = df[['YearsExperience']]
y = df['Salary']

# Split the data into training and testing sets (1/3 test, 2/3 train)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=1/3, random_state=42)

print(f"Training set size: {len(X_train)}")
print(f"Test set size: {len(X_test)}")


c)
from sklearn.linear_model import LinearRegression

# Create and train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)


d)
from sklearn.metrics import mean_squared_error

# Calculate Mean Squared Error
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse}")


e)
import matplotlib.pyplot as plt

# Plot training data
plt.figure(figsize=(14, 7))

plt.scatter(X_train, y_train, color='blue', label='Training data')

# Plot test data and predictions
plt.scatter(X_test, y_test, color='red', label='Test data')
plt.scatter(X_test, y_pred, color='green', marker='x', label='Predictions')

# Plotting the regression line
plt.plot(X_train, model.predict(X_train), color='black', linewidth=2, label='Regression line')

plt.xlabel('YearsExperience')
plt.ylabel('Salary')
plt.title('Salary vs Years of Experience')
plt.legend()
plt.grid(True)

plt.show()
